<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--  对com.mmall下的文件（组件）进行注解(annotation)扫描  -->
    <context:component-scan base-package="com.mmall" annotation-config="true">
        <!-- 将扫描为注解为controller的内容交个SpringMVC，即spring里排出对controller的扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 对已经注册的bean进行操的的配置-->
    <!--<context:annotation-config />-->

    <!--  spring的aop的配置，指向spring-aop-4.0.xsd配置里的aspectj-autoproxy  -->
    <aop:aspectj-autoproxy/>

    <!--  spring关于数据源的配置（分离出去，便于管理）  -->
    <import resource="applicationContext-datasource.xml"/>
    <!--  spring关于springSession的配置）  -->
    <import resource="applicationContext-spring-session.xml"/>
</beans>